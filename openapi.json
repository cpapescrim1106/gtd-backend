{
  "openapi": "3.1.0",
  "info": {
    "title": "GTD Backend API (Collapsed)",
    "version": "1.0.3",
    "description": "Fully collapsed OpenAPI spec for Todoist via the GTD backend (â‰¤30 operations)"
  },
  "servers": [
    {
      "url": "https://gtd-backend.onrender.com"
    }
  ],
  "paths": {
    "/tasks/manage": {
      "post": {
        "operationId": "manageTasks",
        "summary": "List, get, create, update, delete, move or change status of tasks",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "action": {
                    "type": "string",
                    "enum": [
                      "list",
                      "get",
                      "create",
                      "update",
                      "delete",
                      "move",
                      "status"
                    ]
                  },
                  "task_id": {
                    "type": "string",
                    "description": "Required for get, update, delete, move, status actions."
                  },
                  "project_id": {
                    "type": "string",
                    "description": "Optional for create/list/move. Used to specify the project."
                  },
                  "section_id": {
                    "type": "string",
                    "description": "Optional for create/move. Used to specify the section within a project."
                  },
                  "content": {
                    "type": "string",
                    "description": "Required for create, optional for update. The task's content."
                  },
                  "due_string": {
                    "type": "string",
                    "description": "Optional for create/update. Human-readable due date (e.g., 'tomorrow', 'next monday')."
                  },
                  "priority": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 4,
                    "description": "Optional for create/update. Task priority (1=p4, 4=p1)."
                  },
                  // --- CORRECTED SECTION START ---
                  "labels": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Optional for create/update. Array of label names (strings) to attach (e.g., [\"email\", \"work\"])"
                  },
                  // --- CORRECTED SECTION END ---
                  "status": {
                    "type": "string",
                    "enum": [
                      "closed",
                      "open"
                    ],
                    "description": "Required for status action. Use 'closed' to complete, 'open' to reopen."
                  }
                },
                "required": [
                  "action"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "JSON response for list/get/create/update/move actions."
          },
          "204": {
            "description": "No content response for successful delete/status actions."
          },
          "400": {
            "description": "Bad Request - Invalid input or parameters."
          },
          "404": {
            "description": "Not Found - Task, project, or section ID does not exist."
          }
        }
      }
    },
    "/projects/manage": {
      "post": {
        "operationId": "manageProjects",
        "summary": "List, get, create, update, delete, archive/unarchive or list collaborators of projects",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "action": {
                    "type": "string",
                    "enum": [
                      "list",
                      "get",
                      "create",
                      "update",
                      "delete",
                      "state",
                      "collaborators"
                    ]
                  },
                  "project_id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "color": {
                    "type": "string"
                  },
                  "parent_id": {
                    "type": "string"
                  },
                  "is_shared": {
                    "type": "boolean"
                  },
                  "is_favorite": {
                    "type": "boolean"
                  },
                  "state": {
                    "type": "string",
                    "enum": [
                      "archived",
                      "active"
                    ]
                  }
                },
                "required": [
                  "action"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "JSON response for list/get/create/update/collaborators"
          },
          "204": {
            "description": "No content for delete/state actions"
          }
        }
      }
    },
    "/sections/manage": {
      "post": {
        "operationId": "manageSections",
        "summary": "List, get, create, update or delete sections",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "action": {
                    "type": "string",
                    "enum": [
                      "list",
                      "get",
                      "create",
                      "update",
                      "delete"
                    ]
                  },
                  "section_id": {
                    "type": "string"
                  },
                  "project_id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "order": {
                    "type": "integer"
                  }
                },
                "required": [
                  "action"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "JSON response for list/get/create/update"
          },
          "204": {
            "description": "No content for delete actions"
          }
        }
      }
    },
    "/labels/manage": {
      "post": {
        "operationId": "manageLabels",
        "summary": "List, get, create, update, delete personal labels or manage shared labels",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "action": {
                    "type": "string",
                    "enum": [
                      "list",
                      "get",
                      "create",
                      "update",
                      "delete",
                      "list_shared",
                      "rename_shared",
                      "remove_shared"
                    ]
                  },
                  "label_id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "color": {
                    "type": "string"
                  },
                  "order": {
                    "type": "integer"
                  },
                  "is_favorite": {
                    "type": "boolean"
                  },
                  "new_name": {
                    "type": "string"
                  }
                },
                "required": [
                  "action"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "JSON response for list/get/create/update/shared-list/shared-rename"
          },
          "204": {
            "description": "No content for delete/shared-remove actions"
          }
        }
      }
    },
    "/comments/manage": {
      "post": {
        "operationId": "manageComments",
        "summary": "List, get, create, update or delete comments",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "action": {
                    "type": "string",
                    "enum": [
                      "list",
                      "get",
                      "create",
                      "update",
                      "delete"
                    ]
                  },
                  "comment_id": {
                    "type": "string"
                  },
                  "task_id": {
                    "type": "string"
                  },
                  "project_id": {
                    "type": "string"
                  },
                  "content": {
                    "type": "string"
                  }
                },
                "required": [
                  "action"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "JSON response for list/get/create/update"
          },
          "204": {
            "description": "No content for delete actions"
          }
        }
      }
    },
    "/reminders/manage": {
      "post": {
        "operationId": "manageReminders",
        "summary": "List, create or delete reminders",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "action": {
                    "type": "string",
                    "enum": [
                      "list",
                      "create",
                      "delete"
                    ]
                  },
                  "reminder_id": {
                    "type": "string"
                  },
                  "task_id": {
                    "type": "string"
                  },
                  "due_string": {
                    "type": "string"
                  }
                },
                "required": [
                  "action"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "JSON response for list/create"
          },
          "204": {
            "description": "No content for delete actions"
          }
        }
      }
    },
    "/collaborators/manage": {
      "post": {
        "operationId": "manageCollaborators",
        "summary": "List collaborators on shared projects",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "action": {
                    "type": "string",
                    "enum": [
                      "list"
                    ]
                  },
                  "project_id": {
                    "type": "string"
                  }
                },
                "required": [
                  "action"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "JSON response for list collaborators"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {},
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-KEY"
      }
    }
  },
  "security": [
    {
      "ApiKeyAuth": []
    }
  ]
}
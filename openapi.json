{
  "openapi": "3.1.0",
  "info": {
    "title": "GTD Backend API",
    "version": "1.0.2",
    "description": "Collapsed OpenAPI spec for Todoist via the GTD backend (â‰¤30 operations)"
  },
  "servers": [
    {
      "url": "https://gtd-backend.onrender.com"
    }
  ],
  "paths": {
    "/tasks": {
      "get": {
        "operationId": "listTasks",
        "summary": "List all active tasks",
        "parameters": [
          { "name": "project_id", "in": "query", "schema": { "type": "string" } },
          { "name": "label_id",   "in": "query", "schema": { "type": "string" } },
          { "name": "filter",     "in": "query", "schema": { "type": "string" } }
        ],
        "responses": { "200": { "description": "A list of tasks" } }
      },
      "post": {
        "operationId": "createTask",
        "summary": "Create a new task",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "content":    { "type": "string" },
                  "project_id": { "type": "string" },
                  "section_id": { "type": "string" },
                  "due_string": { "type": "string" },
                  "priority":   { "type": "integer", "minimum": 1, "maximum": 4 },
                  "label_ids":  { "type": "array", "items": { "type": "integer" } }
                },
                "required": ["content"]
              }
            }
          }
        },
        "responses": { "200": { "description": "Task created" } }
      }
    },
    "/tasks/{task_id}": {
      "get": {
        "operationId": "getTask",
        "summary": "Retrieve a specific task",
        "parameters": [
          { "name": "task_id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": { "200": { "description": "Task details" } }
      },
      "post": {
        "operationId": "updateTask",
        "summary": "Update task properties",
        "parameters": [
          { "name": "task_id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "content":    { "type": "string" },
                  "due_string": { "type": "string" },
                  "priority":   { "type": "integer", "minimum": 1, "maximum": 4 },
                  "label_ids":  { "type": "array", "items": { "type": "integer" } }
                }
              }
            }
          }
        },
        "responses": { "200": { "description": "Task updated" } }
      },
      "delete": {
        "operationId": "deleteTask",
        "summary": "Delete a task",
        "parameters": [
          { "name": "task_id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": { "204": { "description": "Task deleted" } }
      }
    },
    "/tasks/{task_id}/move": {
      "post": {
        "operationId": "moveTask",
        "summary": "Move task to another project or section",
        "parameters": [
          { "name": "task_id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "project_id": { "type": "string" },
                  "section_id": { "type": "string" }
                },
                "required": ["project_id"]
              }
            }
          }
        },
        "responses": { "204": { "description": "Task moved" } }
      }
    },
    "/tasks/{task_id}/status": {
      "post": {
        "operationId": "setTaskStatus",
        "summary": "Close or reopen a task",
        "parameters": [
          { "name": "task_id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": ["closed", "open"]
                  }
                },
                "required": ["status"]
              }
            }
          }
        },
        "responses": { "204": { "description": "Task status updated" } }
      }
    },
    "/projects": {
      "get": {
        "operationId": "listProjects",
        "summary": "List all projects",
        "responses": { "200": { "description": "Projects list" } }
      },
      "post": {
        "operationId": "createProject",
        "summary": "Create a new project",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name":        { "type": "string" },
                  "color":       { "type": "string" },
                  "parent_id":   { "type": "string" },
                  "is_shared":   { "type": "boolean" },
                  "is_favorite": { "type": "boolean" }
                },
                "required": ["name"]
              }
            }
          }
        },
        "responses": { "200": { "description": "Project created" } }
      }
    },
    "/projects/{project_id}": {
      "get": {
        "operationId": "getProject",
        "summary": "Retrieve project details",
        "parameters": [
          { "name": "project_id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": { "200": { "description": "Project details" } }
      },
      "post": {
        "operationId": "updateProject",
        "summary": "Update a project",
        "parameters": [
          { "name": "project_id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name":        { "type": "string" },
                  "color":       { "type": "string" },
                  "order":       { "type": "integer" },
                  "is_shared":   { "type": "boolean" },
                  "is_favorite": { "type": "boolean" }
                }
              }
            }
          }
        },
        "responses": { "200": { "description": "Project updated" } }
      },
      "delete": {
        "operationId": "deleteProject",
        "summary": "Delete a project",
        "parameters": [
          { "name": "project_id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": { "204": { "description": "Project deleted" } }
      }
    },
    "/projects/{project_id}/state": {
      "post": {
        "operationId": "setProjectState",
        "summary": "Archive or unarchive a project",
        "parameters": [
          { "name": "project_id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "state": {
                    "type": "string",
                    "enum": ["archived", "active"]
                  }
                },
                "required": ["state"]
              }
            }
          }
        },
        "responses": { "204": { "description": "Project state updated" } }
      }
    },
    "/projects/{project_id}/collaborators": {
      "get": {
        "operationId": "listProjectCollaborators",
        "summary": "List collaborators on a shared project",
        "parameters": [
          { "name": "project_id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": { "200": { "description": "Collaborators list" } }
      }
    },
    "/sections": {
      "get": {
        "operationId": "listSections",
        "summary": "List all sections",
        "parameters": [
          { "name": "project_id", "in": "query", "schema": { "type": "string" } }
        ],
        "responses": { "200": { "description": "Sections list" } }
      },
      "post": {
        "operationId": "createSection",
        "summary": "Create a new section",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "project_id": { "type": "string" },
                  "name":       { "type": "string" }
                },
                "required": ["project_id", "name"]
              }
            }
          }
        },
        "responses": { "200": { "description": "Section created" } }
      }
    },
    "/sections/{section_id}": {
      "get": {
        "operationId": "getSection",
        "summary": "Retrieve a section",
        "parameters": [
          { "name": "section_id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": { "200": { "description": "Section details" } }
      },  
      "post": {
        "operationId": "updateSection",
        "summary": "Update a section",
        "parameters": [
          { "name": "section_id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name":  { "type": "string" },
                  "order": { "type": "integer" }
                }
              }
            }
          }
        },
        "responses": { "200": { "description": "Section updated" } }
      },
      "delete": {
        "operationId": "deleteSection",
        "summary": "Delete a section",
        "parameters": [
          { "name": "section_id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": { "204": { "description": "Section deleted" } }
      }
    },
    "/labels": {
      "get": {
        "operationId": "listLabels",
        "summary": "List personal labels",
        "responses": { "200": { "description": "Labels list" } }
      },
      "post": {
        "operationId": "createLabel",
        "summary": "Create a new personal label",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name":        { "type": "string" },
                  "color":       { "type": "string" },
                  "order":       { "type": "integer" },
                  "is_favorite": { "type": "boolean" }
                },
                "required": ["name"]
              }
            }
          }
        },
        "responses": { "200": { "description": "Label created" } }
      }
    },
    "/labels/{label_id}": {
      "get": {
        "operationId": "getLabel",
        "summary": "Retrieve a personal label",
        "parameters": [
          { "name": "label_id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": { "200": { "description": "Label details" } }
      },
      "post": {
        "operationId": "updateLabel",
        "summary": "Update a personal label",
        "parameters": [
          { "name": "label_id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name":        { "type": "string" },
                  "color":       { "type": "string" },
                  "order":       { "type": "integer" },
                  "is_favorite": { "type": "boolean" }
                }
              }
            }
          }
        },
        "responses": { "200": { "description": "Label updated" } }
      },
      "delete": {
        "operationId": "deleteLabel",
        "summary": "Delete a personal label",
        "parameters": [
          { "name": "label_id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": { "204": { "description": "Label deleted" } }
      }
    },
    "/labels/shared": {
      "post": {
        "operationId": "manageSharedLabels",
        "summary": "List, rename, or remove shared labels",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "action":   { "type": "string", "enum": ["list","rename","remove"] },
                  "name":     { "type": "string" },
                  "new_name": { "type": "string" }
                },
                "required": ["action"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Shared labels list or confirmation" },
          "204": { "description": "Shared label action succeeded" }
        }
      }
    },
    "/comments": {
      "post": {
        "operationId": "manageComments",
        "summary": "List, create, update, or delete comments",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "action":     { "type": "string", "enum": ["list","create","update","delete"] },
                  "comment_id": { "type": "string" },
                  "task_id":    { "type": "string" },
                  "project_id": { "type": "string" },
                  "content":    { "type": "string" }
                },
                "required": ["action"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Comments list or comment created/updated" },
          "204": { "description": "Comment deleted" }
        }
      }
    },
    "/reminders": {
      "get": {
        "operationId": "listReminders",
        "summary": "List all reminders",
        "responses": { "200": { "description": "Reminders list" } }
      },
      "post": {
        "operationId": "createReminder",
        "summary": "Create a reminder for a task",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "task_id":    { "type": "string" },
                  "due_string": { "type": "string" }
                },
                "required": ["task_id","due_string"]
              }
            }
          }
        },
        "responses": { "200": { "description": "Reminder created" } }
      }
    },
    "/reminders/{reminder_id}": {
      "delete": {
        "operationId": "deleteReminder",
        "summary": "Delete a reminder",
        "parameters": [
          { "name": "reminder_id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": { "204": { "description": "Reminder deleted" } }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-KEY"
      }
    }
  },
  "security": [
    {
      "ApiKeyAuth": []
    }
  ]
}
